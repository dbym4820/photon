#!/bin/sh
#|-*- mode:lisp -*-|#
#| <Put a one-line description here>
exec ros -Q -- $0 "$@"
|#
(progn
  (ros:ensure-asdf)	
  (unless (find-package :photon)
    (ql:quickload '(photon) :silent t)))

(defpackage #:ros.script.photon
  (:use :cl)
  (:import-from :photon
                :convert-ontology
	        :concept-name
	        :show-concepts
	        :find-concept
	        :show-attribute
		:list-ontology
		:get-ontology-details
		:init
		:install
		:viewer
		:launch-gui
		:set-local-ontology
		:run
	       ))
(in-package #:ros.script.photon)

(defun help-sentence ()
  "Usage: photon [option] ontology-file")

(defun option-eq (option-arg correct-option-list)
  (find option-arg correct-option-list :test #'string=))

(defun main (&rest argv)
  (let ((first-option (first argv))
        (second-option (second argv))
        (third-option (third argv))
        (fourth-option (fourth argv)))
    (declare (ignorable first-option second-option third-option fourth-option))
    (cond ((option-eq first-option '("main-ontology" "--main-ontology" "-mo"))
	   ;; オントロジーのリスト表示
	   (format t "current main ontology~%~4T->  ~A"
		   (viewer "current/ontology")))
	  ((option-eq first-option '("list-ontology" "--list-ontology" "-lo"))
	   ;; オントロジーのリスト表示
	   (format t "listing registered ontologies below.~%~{~{~4T~A --> ~A~} ~%~}" (list-ontology)))
	  ((option-eq first-option '("init" "--init" "-i"))
	   ;; オントロジーコンバーティングの初期化
	   (init :update t))
	  ((option-eq first-option '("install" "--install" "-i"))
	   ;; オントロジーのダウンロード
	   (if second-option
	       (install second-option)
	       (viewer "help/install")))
	  ((option-eq first-option '("details" "--details" "-d"))
	   ;; コンバート済みオントロジー内の概念の詳細検索
	   (if second-option
	       (format t "~A~%"
		       (handler-case
			   (viewer "ontology/details" second-option)
			 (error ()
			   "no concept founded")))
	       (viewer "help/details")))
	  ((option-eq first-option '("file" "--file" "-f"))
	   ;; ファイルを指定してオントロジーの基本概念一覧を表示
           (convert-ontology :file-path second-option)
           (format t "~{~A~^, ~}~%" (remove "whole-root" (show-concepts) :test #'string=)))
          ((option-eq first-option '("show-all-concepts" "--show-all-concepts" "-s"))
	   ;; すべての概念定義を見る
           (format t "~A" (viewer "result/concept-list")))
	  ((option-eq first-option '("get-child" "--get-child" "-ch"))
	   ;; 子概念を調べる
	   (format t "~A~%" (viewer "help/system")))
	  ((option-eq first-option '("start-server" "--start-server" "-sts"))
	   ;; Webサーバーの起動
	   (init :file-path (viewer "current/ontology") :update t)
	   (launch-gui :start-server 5050)
	   (loop))
	  ((option-eq first-option '("local" "--set-local-ontology" "-slo"))
	   ;; ローカルのオントロジーファイルを読み込んで使う
	   (if second-option
	       (set-local-ontology second-option)
	       (viewer "help/set-local-ontology")))	  
	  ((option-eq first-option '("version" "--version" "-v"))
	   ;; Photonシステムのバージョン
	   (format t "~A~%" (viewer "config/version")))
	  ((option-eq first-option '("help" "--help" "-h"))
	   ;; ヘルプ
	   (format t "~A~%" (viewer "help/system")))
	  (t
	   ;; 入力ミス用
           (format t "~A~%" (viewer "help/system"))))))
