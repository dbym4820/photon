#!/bin/sh
#|-*- mode:lisp -*-|#
#| <Put a one-line description here>
exec ros -Q -- $0 "$@"
|#
(progn
  (ros:ensure-asdf)	
  (unless (find-package :photon)
    (ql:quickload '(photon) :silent t)))

(defpackage #:ros.script.photon
  (:use :cl)
  (:import-from :photon
                :convert-ontology
	        :concept-name
	        :show-concepts
	        :find-concept
	        :show-attribute
		:list-ontology
		:init
	       ))
(in-package #:ros.script.photon)


(defun help-sentence ()
  "Usage: photon [option] ontology-file")

(defun option-eq (option-arg correct-option-list)
  (find option-arg correct-option-list :test #'string=))

(defun main (&rest argv)
  (let ((first-option (first argv))
        (second-option (second argv))
        (third-option (third argv))
        (fourth-option (fourth argv)))
    (declare (ignorable first-option second-option third-option fourth-option))
    (cond ((option-eq first-option nil)
	   ;; 引数なしのとき
	   (format t "~A~%" (help-sentence)))
	  ((option-eq first-option '("--list-ontology" "-lo"))
	   ;; オントロジーのリスト表示
	   (format t "~{~A~%~}" (list-ontology)))
	  ((option-eq first-option '("--help" "-h"))
	   ;; ヘルプ
	   (format t "~A~%" (help-sentence)))
	  ((option-eq first-option '("--file" "-f"))
	   ;; ファイルを指定してオントロジーの基本概念一覧を表示
           (convert-ontology :file-path second-option)
           (format t "~{~A~^, ~}~%" (remove "whole-root" (show-concepts) :test #'string=)))
          ((option-eq first-option '("--all-concept" "-a"))
	   ;; ファイルを指定せずにオントロジーの基本概念一覧を表示
           (format t "~{~A~^, ~}~%" (show-concepts)))
          ((option-eq first-option '("--list-concept" "-lc"))
	   ;; ファイルを指定して，改行ありで基本概念一覧を表示
	   (when second-option
	     (convert-ontology :file-path second-option))
           (format t "~{~A~%~}" (remove "whole-root" (show-concepts) :test #'string=)))
	  ((option-eq first-option '("--child" "-c"))
	   (format t "~A~%" (help-sentence)))
          (t
	   ;; 入力ミス
           (format t "~A~%" (help-sentence))))))
