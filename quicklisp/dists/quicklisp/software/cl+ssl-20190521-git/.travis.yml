language: common-lisp
sudo: false # lets try new infrastructure

env:
  global:
    - PATH=~/.roswell/bin:$PATH
    - ROSWELL_BRANCH=release
    - ROSWELL_INSTALL_DIR=$HOME/.roswell
    - COVERAGE_EXCLUDE=test
  matrix:
    - LISP=sbcl-bin COVERALLS=true OPENSSL=openssl-0.9.8zh
    - LISP=sbcl-bin COVERALLS=true OPENSSL=openssl-1.0.0s
    - LISP=sbcl-bin COVERALLS=true OPENSSL=openssl-1.0.2q
    - LISP=sbcl-bin COVERALLS=true OPENSSL=openssl-1.1.0j
    - LISP=sbcl-bin COVERALLS=true OPENSSL=openssl-1.1.1a
    - LISP=ccl-bin OPENSSL=openssl-0.9.8zh
    - LISP=ccl-bin OPENSSL=openssl-1.0.0s
    - LISP=ccl-bin OPENSSL=openssl-1.0.2q
    - LISP=ccl-bin OPENSSL=openssl-1.1.0j
    - LISP=ccl-bin OPENSSL=openssl-1.1.1a
# CLISP is disabled because it can't load bordeaux-treads which require ASDF >= 3.1
# Example log: https://travis-ci.org/cl-plus-ssl/cl-plus-ssl/jobs/181539210
# (As a workaround we could try to download ASDF 3 ourselves)
#    - LISP=clisp
    - LISP=ecl OPENSSL=openssl-0.9.8zh
    - LISP=ecl OPENSSL=openssl-1.0.0s
    - LISP=ecl OPENSSL=openssl-1.0.2q
    - LISP=ecl OPENSSL=openssl-1.1.0j
    - LISP=ecl OPENSSL=openssl-1.1.1a
    - LISP=abcl OPENSSL=openssl-0.9.8zh
    - LISP=abcl OPENSSL=openssl-1.0.0s
    - LISP=abcl OPENSSL=openssl-1.0.2q
    - LISP=abcl OPENSSL=openssl-1.1.0j
    - LISP=abcl OPENSSL=openssl-1.1.1a
# CMUCL fails to load libssl on TravisCI, despite OpenSSL 1.0.1f is installed,
# example log: https://travis-ci.org/cl-plus-ssl/cl-plus-ssl/jobs/479189027
#    - LISP=cmu-bin
#
# Allegro is also failing to load libssl
# https://travis-ci.org/cl-plus-ssl/cl-plus-ssl/jobs/479194225
# When we started to explicitly load OpenSSL binaries ourself
# it reveals error "wrong ELF class: ELFCLASS64".
# https://travis-ci.org/cl-plus-ssl/cl-plus-ssl/jobs/491537170
# Looks like the Allegro CL installed by rowsell is 32bit,
# while the OpenSSL binaries we build are 64 bit.
#    - LISP=allegro OPENSSL=openssl-0.9.8zh
#    - LISP=allegro OPENSSL=openssl-1.0.0s
#    - LISP=allegro OPENSSL=openssl-1.0.2q
#    - LISP=allegro OPENSSL=openssl-1.1.0j
#    - LISP=allegro OPENSSL=openssl-1.1.1a

install:
  - curl -L https://raw.githubusercontent.com/snmsts/roswell/$ROSWELL_BRANCH/scripts/install-for-ci.sh | sh
  - test/run-on-many-lisps-and-openssls/openssl-releases/fetch.sh "$OPENSSL"
  - test/run-on-many-lisps-and-openssls/openssl-releases/build.sh "$OPENSSL" > openssl-build.log

#  cache:
#    directories:
#      - $HOME/.roswell
#      - $HOME/.config/common-lisp

script:
  - "ros -e '(progn
               (format t \"(lisp-implementation-type): ~A~%\" (lisp-implementation-type))
               (format t \"(lisp-implementation-version): ~A~%\" (lisp-implementation-version))
               (format t \"*features*: ~A~%\" *features*)
               (format t \"(asdf:asdf-version): ~A~%\" (asdf:asdf-version)))'
         -e '(ql:quickload :cffi)'
         -e '(cffi:load-foreign-library \"test/run-on-many-lisps-and-openssls/openssl-releases/bin/'$OPENSSL'/lib/libcrypto.so\")'
         -e '(cffi:load-foreign-library \"test/run-on-many-lisps-and-openssls/openssl-releases/bin/'$OPENSSL'/lib/libssl.so\")'
         -e '(pushnew :cl+ssl-foreign-libs-already-loaded *features*)'
         -e '(ql:quickload :cl+ssl.test)'
         -e '(format t \"(cl+ssl::compat-openssl-version): ~A~%\" (cl+ssl::compat-openssl-version))'
         -e '(let ((results
                  #+ sbcl
                  (coveralls:with-coveralls (:exclude \"test\")
                     (5am:run :cl+ssl))
                  #- sbcl
                  (5am:run :cl+ssl)
                  ))
              (5am:explain! results)
              #+abcl
              (let* ((expected-failures (quote (cl+ssl.test::wrong.host
                                                cl+ssl.test::expired)))
                     (failed-test-names (mapcar (lambda (result)
                                                  (5am::name (5am::test-case result)))
                                                (remove-if-not (quote 5am::test-failure-p)
                                                               results))))
                (if (set-exclusive-or expected-failures
                                      failed-test-names)
                    (progn
                      (format t \"~%ABCL: expected faileres on Travis CI: ~S, actual failures: ~S~%\"
                              expected-failures
                              failed-test-names)
                      (uiop:quit 1))
                    (format t \"ABCL failed some tests as expected on Travis CI: ~S~%\"
                            expected-failures)))
              #-abcl
              (unless (5am:results-status results)
                (uiop:quit 1)))'"
